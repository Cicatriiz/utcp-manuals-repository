{
  "utcp_version": "1.0.0",
  "manual_version": "1.0.0",
  "tools": [
    {
      "name": "chat_completion",
      "description": "Generate chat completions using OpenAI's chat models",
      "inputs": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model to use for completion",
            "enum": ["gpt-4o", "gpt-4o-mini", "gpt-4-turbo", "gpt-3.5-turbo"],
            "default": "gpt-4o-mini"
          },
          "messages": {
            "type": "array",
            "description": "Array of message objects",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": ["system", "user", "assistant"]
                },
                "content": {
                  "type": "string",
                  "description": "Message content"
                }
              },
              "required": ["role", "content"]
            }
          },
          "max_tokens": {
            "type": "integer",
            "description": "Maximum number of tokens to generate",
            "minimum": 1,
            "maximum": 4096
          },
          "temperature": {
            "type": "number",
            "description": "Sampling temperature (0.0 to 2.0)",
            "minimum": 0.0,
            "maximum": 2.0,
            "default": 1.0
          },
          "top_p": {
            "type": "number",
            "description": "Nucleus sampling parameter",
            "minimum": 0.0,
            "maximum": 1.0,
            "default": 1.0
          },
          "frequency_penalty": {
            "type": "number",
            "description": "Frequency penalty (-2.0 to 2.0)",
            "minimum": -2.0,
            "maximum": 2.0,
            "default": 0.0
          },
          "presence_penalty": {
            "type": "number",
            "description": "Presence penalty (-2.0 to 2.0)",
            "minimum": -2.0,
            "maximum": 2.0,
            "default": 0.0
          },
          "stream": {
            "type": "boolean",
            "description": "Whether to stream back partial progress",
            "default": false
          }
        },
        "required": ["model", "messages"]
      },
      "outputs": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "object": {"type": "string"},
          "created": {"type": "integer"},
          "model": {"type": "string"},
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {"type": "integer"},
                "message": {
                  "type": "object",
                  "properties": {
                    "role": {"type": "string"},
                    "content": {"type": "string"}
                  }
                },
                "finish_reason": {"type": "string"}
              }
            }
          },
          "usage": {
            "type": "object",
            "properties": {
              "prompt_tokens": {"type": "integer"},
              "completion_tokens": {"type": "integer"},
              "total_tokens": {"type": "integer"}
            }
          }
        }
      },
      "tags": ["ai", "chat", "completion", "gpt", "language-model"],
      "average_response_size": 1500,
      "tool_transport": {
        "transport_type": "http",
        "url": "https://api.openai.com/v1/chat/completions",
        "http_method": "POST",
        "headers": {
          "Authorization": "Bearer {api_key}",
          "Content-Type": "application/json"
        },
        "body": {
          "model": "{model}",
          "messages": "{messages}",
          "max_tokens": "{max_tokens}",
          "temperature": "{temperature}",
          "top_p": "{top_p}",
          "frequency_penalty": "{frequency_penalty}",
          "presence_penalty": "{presence_penalty}",
          "stream": "{stream}"
        },
        "auth": {
          "auth_type": "bearer",
          "api_key": "YOUR_OPENAI_API_KEY"
        }
      }
    },
    {
      "name": "text_embedding",
      "description": "Generate embeddings for text using OpenAI's embedding models",
      "inputs": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model to use for embeddings",
            "enum": ["text-embedding-3-large", "text-embedding-3-small", "text-embedding-ada-002"],
            "default": "text-embedding-3-small"
          },
          "input": {
            "type": "string",
            "description": "Text to generate embeddings for"
          },
          "encoding_format": {
            "type": "string",
            "description": "Format for the embeddings",
            "enum": ["float", "base64"],
            "default": "float"
          },
          "dimensions": {
            "type": "integer",
            "description": "Number of dimensions for the embedding (only for text-embedding-3 models)",
            "minimum": 1
          }
        },
        "required": ["model", "input"]
      },
      "outputs": {
        "type": "object",
        "properties": {
          "object": {"type": "string"},
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "object": {"type": "string"},
                "index": {"type": "integer"},
                "embedding": {
                  "type": "array",
                  "items": {"type": "number"}
                }
              }
            }
          },
          "model": {"type": "string"},
          "usage": {
            "type": "object",
            "properties": {
              "prompt_tokens": {"type": "integer"},
              "total_tokens": {"type": "integer"}
            }
          }
        }
      },
      "tags": ["ai", "embeddings", "vector", "similarity", "search"],
      "average_response_size": 15000,
      "tool_transport": {
        "transport_type": "http",
        "url": "https://api.openai.com/v1/embeddings",
        "http_method": "POST",
        "headers": {
          "Authorization": "Bearer {api_key}",
          "Content-Type": "application/json"
        },
        "body": {
          "model": "{model}",
          "input": "{input}",
          "encoding_format": "{encoding_format}",
          "dimensions": "{dimensions}"
        },
        "auth": {
          "auth_type": "bearer",
          "api_key": "YOUR_OPENAI_API_KEY"
        }
      }
    },
    {
      "name": "image_generation",
      "description": "Generate images from text prompts using DALL-E",
      "inputs": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model to use for image generation",
            "enum": ["dall-e-3", "dall-e-2"],
            "default": "dall-e-3"
          },
          "prompt": {
            "type": "string",
            "description": "Text description of the desired image"
          },
          "n": {
            "type": "integer",
            "description": "Number of images to generate (1-10 for dall-e-2, only 1 for dall-e-3)",
            "minimum": 1,
            "maximum": 10,
            "default": 1
          },
          "size": {
            "type": "string",
            "description": "Size of the generated images",
            "enum": ["256x256", "512x512", "1024x1024", "1792x1024", "1024x1792"],
            "default": "1024x1024"
          },
          "quality": {
            "type": "string",
            "description": "Quality of the image (dall-e-3 only)",
            "enum": ["standard", "hd"],
            "default": "standard"
          },
          "style": {
            "type": "string",
            "description": "Style of the image (dall-e-3 only)",
            "enum": ["vivid", "natural"],
            "default": "vivid"
          },
          "response_format": {
            "type": "string",
            "description": "Format of the response",
            "enum": ["url", "b64_json"],
            "default": "url"
          }
        },
        "required": ["model", "prompt"]
      },
      "outputs": {
        "type": "object",
        "properties": {
          "created": {"type": "integer"},
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {"type": "string"},
                "b64_json": {"type": "string"},
                "revised_prompt": {"type": "string"}
              }
            }
          }
        }
      },
      "tags": ["ai", "image-generation", "dall-e", "art", "creative"],
      "average_response_size": 2000,
      "tool_transport": {
        "transport_type": "http",
        "url": "https://api.openai.com/v1/images/generations",
        "http_method": "POST",
        "headers": {
          "Authorization": "Bearer {api_key}",
          "Content-Type": "application/json"
        },
        "body": {
          "model": "{model}",
          "prompt": "{prompt}",
          "n": "{n}",
          "size": "{size}",
          "quality": "{quality}",
          "style": "{style}",
          "response_format": "{response_format}"
        },
        "auth": {
          "auth_type": "bearer",
          "api_key": "YOUR_OPENAI_API_KEY"
        }
      }
    },
    {
      "name": "speech_to_text",
      "description": "Transcribe audio to text using Whisper",
      "inputs": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model to use for transcription",
            "enum": ["whisper-1"],
            "default": "whisper-1"
          },
          "file": {
            "type": "string",
            "description": "Audio file to transcribe (base64 encoded or file path)",
            "format": "binary"
          },
          "language": {
            "type": "string",
            "description": "Language of the input audio (ISO-639-1 format)"
          },
          "prompt": {
            "type": "string",
            "description": "Optional text to guide the model's style"
          },
          "response_format": {
            "type": "string",
            "description": "Format of the transcript output",
            "enum": ["json", "text", "srt", "verbose_json", "vtt"],
            "default": "json"
          },
          "temperature": {
            "type": "number",
            "description": "Sampling temperature (0.0 to 1.0)",
            "minimum": 0.0,
            "maximum": 1.0,
            "default": 0.0
          }
        },
        "required": ["model", "file"]
      },
      "outputs": {
        "type": "object",
        "properties": {
          "text": {"type": "string"}
        }
      },
      "tags": ["ai", "speech-to-text", "whisper", "transcription", "audio"],
      "average_response_size": 500,
      "tool_transport": {
        "transport_type": "http",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "http_method": "POST",
        "headers": {
          "Authorization": "Bearer {api_key}",
          "Content-Type": "multipart/form-data"
        },
        "body": {
          "model": "{model}",
          "file": "{file}",
          "language": "{language}",
          "prompt": "{prompt}",
          "response_format": "{response_format}",
          "temperature": "{temperature}"
        },
        "auth": {
          "auth_type": "bearer",
          "api_key": "YOUR_OPENAI_API_KEY"
        }
      }
    },
    {
      "name": "text_to_speech",
      "description": "Generate speech from text using OpenAI's TTS models",
      "inputs": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "TTS model to use",
            "enum": ["tts-1", "tts-1-hd"],
            "default": "tts-1"
          },
          "input": {
            "type": "string",
            "description": "Text to convert to speech"
          },
          "voice": {
            "type": "string",
            "description": "Voice to use for generation",
            "enum": ["alloy", "echo", "fable", "onyx", "nova", "shimmer"],
            "default": "alloy"
          },
          "response_format": {
            "type": "string",
            "description": "Audio format",
            "enum": ["mp3", "opus", "aac", "flac"],
            "default": "mp3"
          },
          "speed": {
            "type": "number",
            "description": "Speed of the generated audio (0.25 to 4.0)",
            "minimum": 0.25,
            "maximum": 4.0,
            "default": 1.0
          }
        },
        "required": ["model", "input", "voice"]
      },
      "outputs": {
        "type": "string",
        "description": "Binary audio data",
        "format": "binary"
      },
      "tags": ["ai", "text-to-speech", "tts", "voice", "audio"],
      "average_response_size": 50000,
      "tool_transport": {
        "transport_type": "http",
        "url": "https://api.openai.com/v1/audio/speech",
        "http_method": "POST",
        "headers": {
          "Authorization": "Bearer {api_key}",
          "Content-Type": "application/json"
        },
        "body": {
          "model": "{model}",
          "input": "{input}",
          "voice": "{voice}",
          "response_format": "{response_format}",
          "speed": "{speed}"
        },
        "auth": {
          "auth_type": "bearer",
          "api_key": "YOUR_OPENAI_API_KEY"
        }
      }
    }
  ]
}

